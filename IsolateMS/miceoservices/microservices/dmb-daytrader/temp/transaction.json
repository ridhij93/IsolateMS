[
  {
    "type": "servlet",
    "servlet": "PingJDBCWrite",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite",
    "uri": [
      "/servlet/PingJDBCWrite"
    ],
    "entrydisplayname": "PingJDBCWrite.doGet(0)",
    "txid": "0",
    "id": "0",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from quoteejb q where q.symbol=? for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite.doGet",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteForUpdate"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "update quoteejb set price = ?, change1 = ?, volume = ? where symbol = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite.doGet",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume"
        ],
        "crud": {
          "U": [
            "quoteejb.change1",
            "quoteejb.price",
            "quoteejb.volume"
          ],
          "R": [
            "quoteejb.symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 2,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite.doGet",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingJDBCWrite",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite",
    "uri": [
      "/servlet/PingJDBCWrite"
    ],
    "entrydisplayname": "PingJDBCWrite.doPost(0)",
    "txid": "0",
    "id": "1",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from quoteejb q where q.symbol=? for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite.doGet",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteForUpdate"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "update quoteejb set price = ?, change1 = ?, volume = ? where symbol = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite.doGet",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume"
        ],
        "crud": {
          "U": [
            "quoteejb.change1",
            "quoteejb.price",
            "quoteejb.volume"
          ],
          "R": [
            "quoteejb.symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 2,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite.doGet",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingJDBCRead",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead",
    "uri": [
      "/servlet/PingJDBCRead"
    ],
    "entrydisplayname": "PingJDBCRead.doPost(0)",
    "txid": "0",
    "id": "2",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead.doGet",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingJDBCRead",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead",
    "uri": [
      "/servlet/PingJDBCRead"
    ],
    "entrydisplayname": "PingJDBCRead.doGet(0)",
    "txid": "0",
    "id": "3",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead.doGet",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingJDBCRead2JSP",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP",
    "uri": [
      "/servlet/PingJDBCRead2JSP"
    ],
    "entrydisplayname": "PingJDBCRead2JSP.doPost(0)",
    "txid": "0",
    "id": "4",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP.doGet",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingJDBCRead2JSP",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP",
    "uri": [
      "/servlet/PingJDBCRead2JSP"
    ],
    "entrydisplayname": "PingJDBCRead2JSP.doGet(0)",
    "txid": "0",
    "id": "5",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP.doGet",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2PDF",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF",
    "uri": [
      "/servlet/PingServlet2PDF"
    ],
    "entrydisplayname": "PingServlet2PDF.doPost(0)",
    "txid": "0",
    "id": "6",
    "transaction": [
      {
        "order": 0,
        "resource_type": "file",
        "resource": [
          "http://localhost:9080/daytrader/WAS_V7_64-bit_performance.pdf"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF.doGet"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2PDF",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF",
    "uri": [
      "/servlet/PingServlet2PDF"
    ],
    "entrydisplayname": "PingServlet2PDF.doGet(0)",
    "txid": "0",
    "id": "7",
    "transaction": [
      {
        "order": 0,
        "resource_type": "file",
        "resource": [
          "http://localhost:9080/daytrader/WAS_V7_64-bit_performance.pdf"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF.doGet"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2Session2Entity2JSP",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP",
    "uri": [
      "/ejb3/PingServlet2Session2Entity2JSP"
    ],
    "entrydisplayname": "PingServlet2Session2Entity2JSP.doPost(1)",
    "txid": "1",
    "id": "8",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getQuote"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2Session2Entity2JSP",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP",
    "uri": [
      "/ejb3/PingServlet2Session2Entity2JSP"
    ],
    "entrydisplayname": "PingServlet2Session2Entity2JSP.doGet(1)",
    "txid": "1",
    "id": "9",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getQuote"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2Session2CMROne2Many",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many",
    "uri": [
      "/ejb3/PingServlet2Session2CMR2One2Many"
    ],
    "entrydisplayname": "PingServlet2Session2CMROne2Many.doPost(1)",
    "txid": "1",
    "id": "10",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getOrders"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getOrders"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getOrders"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many.doGet",
          "com.ibm.websphere.samples.daytrader.entities.OrderDataBean.toHTML"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2Session2CMROne2Many",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many",
    "uri": [
      "/ejb3/PingServlet2Session2CMR2One2Many"
    ],
    "entrydisplayname": "PingServlet2Session2CMROne2Many.doGet(1)",
    "txid": "1",
    "id": "11",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getOrders"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getOrders"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getOrders"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many.doGet",
          "com.ibm.websphere.samples.daytrader.entities.OrderDataBean.toHTML"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2TwoPhase",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase",
    "uri": [
      "/ejb3/PingServlet2TwoPhase"
    ],
    "entrydisplayname": "PingServlet2TwoPhase.doPost(1)",
    "txid": "1",
    "id": "12",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.pingTwoPhase"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2TwoPhase",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase",
    "uri": [
      "/ejb3/PingServlet2TwoPhase"
    ],
    "entrydisplayname": "PingServlet2TwoPhase.doGet(1)",
    "txid": "1",
    "id": "13",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.pingTwoPhase"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2Session2EntityCollection",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection",
    "uri": [
      "/ejb3/PingServlet2Session2EntityCollection"
    ],
    "entrydisplayname": "PingServlet2Session2EntityCollection.doPost(1)",
    "txid": "1",
    "id": "14",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getHoldings"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection.doGet",
          "com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.toHTML"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2Session2EntityCollection",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection",
    "uri": [
      "/ejb3/PingServlet2Session2EntityCollection"
    ],
    "entrydisplayname": "PingServlet2Session2EntityCollection.doGet(1)",
    "txid": "1",
    "id": "15",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getHoldings"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection.doGet",
          "com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.toHTML"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2Session2Entity",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity",
    "uri": [
      "/ejb3/PingServlet2Session2Entity"
    ],
    "entrydisplayname": "PingServlet2Session2Entity.doPost(1)",
    "txid": "1",
    "id": "16",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getQuote"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2Session2Entity",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity",
    "uri": [
      "/ejb3/PingServlet2Session2Entity"
    ],
    "entrydisplayname": "PingServlet2Session2Entity.doGet(1)",
    "txid": "1",
    "id": "17",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getQuote"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2Session2CMROne2One",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One",
    "uri": [
      "/ejb3/PingServlet2Session2CMR2One2One"
    ],
    "entrydisplayname": "PingServlet2Session2CMROne2One.doPost(1)",
    "txid": "1",
    "id": "18",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One.doPost",
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountProfileData"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "PingServlet2Session2CMROne2One",
    "entry": "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One",
    "uri": [
      "/ejb3/PingServlet2Session2CMR2One2One"
    ],
    "entrydisplayname": "PingServlet2Session2CMROne2One.doGet(1)",
    "txid": "1",
    "id": "19",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One.doGet",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountProfileData"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "OrdersAlertFilter",
    "entry": "com.ibm.websphere.samples.daytrader.web.OrdersAlertFilter",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "OrdersAlertFilter.doFilter(1)",
    "txid": "1",
    "id": "20",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.OrdersAlertFilter.doFilter",
          "com.ibm.websphere.samples.daytrader.TradeAction.getClosedOrders",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getClosedOrders"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.OrdersAlertFilter.doFilter",
          "com.ibm.websphere.samples.daytrader.TradeAction.getClosedOrders",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getClosedOrders"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.OrdersAlertFilter.doFilter",
          "com.ibm.websphere.samples.daytrader.TradeAction.getClosedOrders",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getClosedOrders"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.OrdersAlertFilter.doFilter",
          "com.ibm.websphere.samples.daytrader.TradeAction.getClosedOrders",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getClosedOrders"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "OrdersAlertFilter",
    "entry": "com.ibm.websphere.samples.daytrader.web.OrdersAlertFilter",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "OrdersAlertFilter.doFilter(3)",
    "txid": "3",
    "id": "21",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from orderejb o where o.orderstatus = 'closed' and o.account_accountid = (select a.accountid from accountejb a where a.profile_userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.OrdersAlertFilter.doFilter",
          "com.ibm.websphere.samples.daytrader.TradeAction.getClosedOrders",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getClosedOrders"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.OrdersAlertFilter.doFilter",
          "com.ibm.websphere.samples.daytrader.TradeAction.getClosedOrders",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getClosedOrders"
        ]
      },
      {
        "order": 1,
        "sql": "update orderejb set orderstatus = ?, completiondate = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.OrdersAlertFilter.doFilter",
          "com.ibm.websphere.samples.daytrader.TradeAction.getClosedOrders",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getClosedOrders",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderStatus"
        ],
        "crud": {
          "U": [
            "orderejb.completiondate",
            "orderejb.orderstatus"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "OrdersAlertFilter",
    "entry": "com.ibm.websphere.samples.daytrader.web.OrdersAlertFilter",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "OrdersAlertFilter.doFilter(4)",
    "txid": "4",
    "id": "22",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.OrdersAlertFilter.doFilter",
          "com.ibm.websphere.samples.daytrader.util.Log.printCollection",
          "com.ibm.websphere.samples.daytrader.util.Log.printCollection",
          "com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.toString"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.OrdersAlertFilter.doFilter",
          "com.ibm.websphere.samples.daytrader.util.Log.printCollection",
          "com.ibm.websphere.samples.daytrader.util.Log.printCollection",
          "com.ibm.websphere.samples.daytrader.entities.OrderDataBean.toString"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doLogin(1)",
    "txid": "1",
    "id": "23",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login",
          "com.ibm.websphere.samples.daytrader.entities.AccountDataBean.login"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login",
          "com.ibm.websphere.samples.daytrader.entities.AccountDataBean.login"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doLogin(5)",
    "txid": "5",
    "id": "24",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.profile_userid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.login"
        ],
        "crud": {
          "R": [
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "update accountejb set lastlogin=?, logincount=logincount+1 where profile_userid=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.login"
        ],
        "crud": {
          "U": [
            "accountejb.lastlogin",
            "accountejb.logincount"
          ],
          "R": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 2,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.login"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doLogin(8)",
    "txid": "8",
    "id": "25",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doLogin(12)",
    "txid": "12",
    "id": "26",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.TradeAction.getAccountData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doLogin(15)",
    "txid": "15",
    "id": "27",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getHoldings"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doLogin(19)",
    "txid": "19",
    "id": "28",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from holdingejb h where h.account_accountid = (select a.accountid from accountejb a where a.profile_userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.TradeAction.getHoldings",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getHoldings"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doHome(2)",
    "txid": "2",
    "id": "29",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.TradeAction.getAccountData",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.TradeAction.getAccountData",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.TradeAction.getAccountData",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doHome(4)",
    "txid": "4",
    "id": "30",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.TradeAction.getAccountData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doHome(8)",
    "txid": "8",
    "id": "31",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getHoldings"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doHome(12)",
    "txid": "12",
    "id": "32",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from holdingejb h where h.account_accountid = (select a.accountid from accountejb a where a.profile_userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.TradeAction.getHoldings",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getHoldings"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doRegister(2)",
    "txid": "2",
    "id": "33",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.register"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.register"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.register"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.register"
        ]
      },
      {
        "order": 4,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.register"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doRegister(4)",
    "txid": "4",
    "id": "34",
    "transaction": [
      {
        "order": 0,
        "sql": "insert into accountejb ( accountid, creationdate, openbalance, balance, lastlogin, logincount, logoutcount, profile_userid) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register"
        ],
        "crud": {
          "C": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 1,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 2,
        "sql": "insert into keygenejb ( keyname, keyval ) values (  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "C": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 3,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 4,
        "sql": "update keygenejb set keyval = ? where keyname = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname"
          ],
          "U": [
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 5,
        "sql": "insert into accountprofileejb ( userid, passwd, fullname, address, email, creditcard ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register"
        ],
        "crud": {
          "C": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "C"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doRegister(8)",
    "txid": "8",
    "id": "35",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login",
          "com.ibm.websphere.samples.daytrader.entities.AccountDataBean.login"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login",
          "com.ibm.websphere.samples.daytrader.entities.AccountDataBean.login"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doRegister(12)",
    "txid": "12",
    "id": "36",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.profile_userid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.login"
        ],
        "crud": {
          "R": [
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "update accountejb set lastlogin=?, logincount=logincount+1 where profile_userid=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.login"
        ],
        "crud": {
          "U": [
            "accountejb.lastlogin",
            "accountejb.logincount"
          ],
          "R": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 2,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.login"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doRegister(15)",
    "txid": "15",
    "id": "37",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doRegister(19)",
    "txid": "19",
    "id": "38",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.TradeAction.getAccountData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doRegister(22)",
    "txid": "22",
    "id": "39",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getHoldings"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doRegister(26)",
    "txid": "26",
    "id": "40",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from holdingejb h where h.account_accountid = (select a.accountid from accountejb a where a.profile_userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doRegister",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogin",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doHome",
          "com.ibm.websphere.samples.daytrader.TradeAction.getHoldings",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getHoldings"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doBuy(1)",
    "txid": "1",
    "id": "41",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteData"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 2,
        "sql": "insert into orderejb ( orderid, ordertype, orderstatus, opendate, quantity, price, orderfee, account_accountid,  holding_holdingid, quote_symbol) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  , ? , ? , ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder"
        ],
        "crud": {
          "C": [
            "orderejb.account_accountid",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 3,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 4,
        "sql": "insert into keygenejb ( keyname, keyval ) values (  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "C": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 5,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 6,
        "sql": "update keygenejb set keyval = ? where keyname = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname"
          ],
          "U": [
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 8,
        "sql": "update accountejb set balance = balance + ? where accountid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.creditAccountBalance"
        ],
        "crud": {
          "R": [
            "accountejb.accountid"
          ],
          "U": [
            "accountejb.balance"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 9,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 10,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.accountid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 11,
        "sql": "insert into holdingejb ( holdingid, purchasedate, purchaseprice, quantity, quote_symbol, account_accountid ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding"
        ],
        "crud": {
          "C": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 12,
        "sql": "select * from holdingejb h where h.holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getHoldingData"
        ],
        "crud": {
          "R": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 13,
        "sql": "update orderejb set holding_holdingid = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderHolding"
        ],
        "crud": {
          "U": [
            "orderejb.holding_holdingid"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 14,
        "sql": "delete from holdingejb where holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ],
          "RD": [
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 15,
        "sql": "update orderejb set holding_holdingid=null where holding_holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "RU": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "RU"
        ]
      },
      {
        "order": 16,
        "sql": "update orderejb set orderstatus = ?, completiondate = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderStatus"
        ],
        "crud": {
          "U": [
            "orderejb.completiondate",
            "orderejb.orderstatus"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doBuy(3)",
    "txid": "3",
    "id": "42",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doBuy(6)",
    "txid": "6",
    "id": "43",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy"
        ]
      },
      {
        "order": 4,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createOrder"
        ]
      },
      {
        "order": 5,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createOrder"
        ]
      },
      {
        "order": 6,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy"
        ]
      },
      {
        "order": 7,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 8,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 9,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 10,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 11,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 12,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 13,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 14,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createHolding"
        ]
      },
      {
        "order": 15,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createHolding"
        ]
      },
      {
        "order": 16,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 17,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.entities.OrderDataBean.cancel"
        ]
      },
      {
        "order": 18,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doBuy(9)",
    "txid": "9",
    "id": "44",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.updateQuotePriceVolume"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doBuy(11)",
    "txid": "11",
    "id": "45",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from quoteejb q where q.symbol=? for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteForUpdate"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "update quoteejb set price = ?, change1 = ?, volume = ? where symbol = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume"
        ],
        "crud": {
          "U": [
            "quoteejb.change1",
            "quoteejb.price",
            "quoteejb.volume"
          ],
          "R": [
            "quoteejb.symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 2,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doBuy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doSell(1)",
    "txid": "1",
    "id": "46",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "select * from holdingejb h where h.holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getHoldingData"
        ],
        "crud": {
          "R": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell"
        ]
      },
      {
        "order": 2,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteData"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 3,
        "sql": "insert into orderejb ( orderid, ordertype, orderstatus, opendate, quantity, price, orderfee, account_accountid,  holding_holdingid, quote_symbol) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  , ? , ? , ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder"
        ],
        "crud": {
          "C": [
            "orderejb.account_accountid",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 4,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 5,
        "sql": "insert into keygenejb ( keyname, keyval ) values (  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "C": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 6,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "update keygenejb set keyval = ? where keyname = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname"
          ],
          "U": [
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 8,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 11,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell"
        ]
      },
      {
        "order": 9,
        "sql": "update holdingejb set purchasedate= ? where holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateHoldingStatus"
        ],
        "crud": {
          "R": [
            "holdingejb.holdingid"
          ],
          "U": [
            "holdingejb.purchasedate"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 10,
        "sql": "update accountejb set balance = balance + ? where accountid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.creditAccountBalance"
        ],
        "crud": {
          "R": [
            "accountejb.accountid"
          ],
          "U": [
            "accountejb.balance"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 11,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 12,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.accountid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 13,
        "sql": "insert into holdingejb ( holdingid, purchasedate, purchaseprice, quantity, quote_symbol, account_accountid ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding"
        ],
        "crud": {
          "C": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 14,
        "sql": "update orderejb set holding_holdingid = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderHolding"
        ],
        "crud": {
          "U": [
            "orderejb.holding_holdingid"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 15,
        "sql": "delete from holdingejb where holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ],
          "RD": [
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 16,
        "sql": "update orderejb set holding_holdingid=null where holding_holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "RU": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "RU"
        ]
      },
      {
        "order": 17,
        "sql": "update orderejb set orderstatus = ?, completiondate = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderStatus"
        ],
        "crud": {
          "U": [
            "orderejb.completiondate",
            "orderejb.orderstatus"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doSell(3)",
    "txid": "3",
    "id": "47",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doSell(5)",
    "txid": "5",
    "id": "48",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 4,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 5,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 6,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 7,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 8,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createOrder"
        ]
      },
      {
        "order": 9,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createOrder"
        ]
      },
      {
        "order": 10,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 11,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 12,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 13,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 14,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 15,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 16,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 17,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 18,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 19,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createHolding"
        ]
      },
      {
        "order": 20,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createHolding"
        ]
      },
      {
        "order": 21,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 22,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.entities.OrderDataBean.cancel"
        ]
      },
      {
        "order": 23,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doSell(9)",
    "txid": "9",
    "id": "49",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doSell(10)",
    "txid": "10",
    "id": "50",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.updateQuotePriceVolume"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doSell(12)",
    "txid": "12",
    "id": "51",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from quoteejb q where q.symbol=? for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteForUpdate"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "update quoteejb set price = ?, change1 = ?, volume = ? where symbol = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume"
        ],
        "crud": {
          "U": [
            "quoteejb.change1",
            "quoteejb.price",
            "quoteejb.volume"
          ],
          "R": [
            "quoteejb.symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 2,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doSell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doPortfolio(2)",
    "txid": "2",
    "id": "52",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doPortfolio",
          "com.ibm.websphere.samples.daytrader.TradeAction.getHoldings",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getHoldings"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doPortfolio(4)",
    "txid": "4",
    "id": "53",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from holdingejb h where h.account_accountid = (select a.accountid from accountejb a where a.profile_userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doPortfolio",
          "com.ibm.websphere.samples.daytrader.TradeAction.getHoldings",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getHoldings"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doPortfolio(7)",
    "txid": "7",
    "id": "54",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doPortfolio"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doPortfolio(8)",
    "txid": "8",
    "id": "55",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doPortfolio",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getQuote"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doPortfolio(12)",
    "txid": "12",
    "id": "56",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doPortfolio",
          "com.ibm.websphere.samples.daytrader.TradeAction.getQuote",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doLogout(1)",
    "txid": "1",
    "id": "57",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogout",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.logout"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogout",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.logout"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogout",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.logout",
          "com.ibm.websphere.samples.daytrader.entities.AccountDataBean.logout"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doLogout(2)",
    "txid": "2",
    "id": "58",
    "transaction": [
      {
        "order": 0,
        "sql": "update accountejb set logoutcount=logoutcount+1 where profile_userid=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doLogout",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.logout"
        ],
        "crud": {
          "U": [
            "accountejb.logoutcount"
          ],
          "R": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccount(1)",
    "txid": "1",
    "id": "59",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccount(3)",
    "txid": "3",
    "id": "60",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccount(8)",
    "txid": "8",
    "id": "61",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountProfileData"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccount(12)",
    "txid": "12",
    "id": "62",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.profile_userid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.TradeAction.getAccountProfileData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccount(15)",
    "txid": "15",
    "id": "63",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getOrders"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getOrders"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getOrders"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccount(19)",
    "txid": "19",
    "id": "64",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from orderejb o where o.account_accountid = (select a.accountid from accountejb a where a.profile_userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.TradeAction.getOrders",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrders"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccountUpdate(1)",
    "txid": "1",
    "id": "65",
    "transaction": [
      {
        "order": 0,
        "sql": "update accountprofileejb set passwd = ?, fullname = ?, address = ?, email = ?, creditcard = ? where userid = (select profile_userid from accountejb a where a.profile_userid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateAccountProfile",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateAccountProfile"
        ],
        "crud": {
          "R": [
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ],
          "U": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "U"
        ]
      },
      {
        "order": 1,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.profile_userid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateAccountProfile",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccountUpdate(3)",
    "txid": "3",
    "id": "66",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.updateAccountProfile"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.updateAccountProfile"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccountUpdate(8)",
    "txid": "8",
    "id": "67",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountData"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccountUpdate(12)",
    "txid": "12",
    "id": "68",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.TradeAction.getAccountData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccountUpdate(15)",
    "txid": "15",
    "id": "69",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountProfileData"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccountUpdate(22)",
    "txid": "22",
    "id": "70",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getOrders"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getOrders"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getOrders"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeAppServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeServletAction",
    "uri": [
      "/app"
    ],
    "entrydisplayname": "TradeServletAction.doAccountUpdate(26)",
    "txid": "26",
    "id": "71",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from orderejb o where o.account_accountid = (select a.accountid from accountejb a where a.profile_userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TradeAppServlet.performTask",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccountUpdate",
          "com.ibm.websphere.samples.daytrader.web.TradeServletAction.doAccount",
          "com.ibm.websphere.samples.daytrader.TradeAction.getOrders",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrders"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeConfigServlet",
    "entry": "com.ibm.websphere.samples.daytrader.TradeAction",
    "uri": [
      "/config"
    ],
    "entrydisplayname": "TradeAction.resetTrade(1)",
    "txid": "1",
    "id": "72",
    "transaction": [
      {
        "order": 0,
        "sql": "delete from quoteejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 1,
        "sql": "delete from accountejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 2,
        "sql": "delete from accountprofileejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 3,
        "sql": "delete from holdingejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 4,
        "sql": "delete from orderejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeConfigServlet",
    "entry": "com.ibm.websphere.samples.daytrader.TradeAction",
    "uri": [
      "/config"
    ],
    "entrydisplayname": "TradeAction.resetTrade(2)",
    "txid": "2",
    "id": "73",
    "transaction": [
      {
        "order": 0,
        "sql": "delete from holdingejb where holdingejb.account_accountid is null",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "RD": [
            "holdingejb.account_accountid"
          ],
          "D": [
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "RD"
        ]
      },
      {
        "order": 1,
        "sql": "delete from accountprofileejb where userid like 'ru:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd"
          ],
          "RD": [
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 2,
        "sql": "delete from orderejb where account_accountid in (select accountid from accountejb a where a.profile_userid like 'ru:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ],
          "RD": [
            "orderejb.account_accountid"
          ],
          "D": [
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "RD"
        ]
      },
      {
        "order": 3,
        "sql": "delete from holdingejb where account_accountid in (select accountid from accountejb a where a.profile_userid like 'ru:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ],
          "RD": [
            "holdingejb.account_accountid"
          ],
          "D": [
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "RD"
        ]
      },
      {
        "order": 4,
        "sql": "delete from accountejb where profile_userid like 'ru:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance"
          ],
          "RD": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 5,
        "sql": "select count(accountid) as \"tradeusercount\" from accountejb a where a.profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 6,
        "sql": "select count(symbol) as \"tradestockcount\" from quoteejb a where a.symbol like 's:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "quoteejb.symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "select sum(logincount) as \"sumlogincount\", sum(logoutcount) as \"sumlogoutcount\" from accountejb a where  a.profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 8,
        "sql": "update accountejb set logoutcount=0,logincount=0 where profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "U": [
            "accountejb.logincount",
            "accountejb.logoutcount"
          ],
          "R": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 9,
        "sql": "select count(holdingid) as \"holdingcount\" from holdingejb h where h.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "holdingejb.account_accountid",
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 10,
        "sql": "select count(orderid) as \"ordercount\" from orderejb o where o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 11,
        "sql": "select count(orderid) \"buyordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.ordertype='buy')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.ordertype"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 12,
        "sql": "select count(orderid) \"sellordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.ordertype='sell')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.ordertype"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 13,
        "sql": "delete from orderejb where orderstatus='cancelled'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ],
          "RD": [
            "orderejb.orderstatus"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 14,
        "sql": "select count(orderid) \"openordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.orderstatus='open')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.orderstatus"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 15,
        "sql": "delete from orderejb where holding_holdingid is null",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.doResetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ],
          "RD": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeConfigServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeBuildDB",
    "uri": [
      "/config"
    ],
    "entrydisplayname": "TradeBuildDB.<init>(1)",
    "txid": "1",
    "id": "74",
    "transaction": [
      {
        "order": 0,
        "sql": "delete from quoteejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 1,
        "sql": "delete from accountejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 2,
        "sql": "delete from accountprofileejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 3,
        "sql": "delete from holdingejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 4,
        "sql": "delete from orderejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeConfigServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeBuildDB",
    "uri": [
      "/config"
    ],
    "entrydisplayname": "TradeBuildDB.<init>(2)",
    "txid": "2",
    "id": "75",
    "transaction": [
      {
        "order": 0,
        "sql": "delete from holdingejb where holdingejb.account_accountid is null",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "RD": [
            "holdingejb.account_accountid"
          ],
          "D": [
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "RD"
        ]
      },
      {
        "order": 1,
        "sql": "delete from accountprofileejb where userid like 'ru:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd"
          ],
          "RD": [
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 2,
        "sql": "delete from orderejb where account_accountid in (select accountid from accountejb a where a.profile_userid like 'ru:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ],
          "RD": [
            "orderejb.account_accountid"
          ],
          "D": [
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "RD"
        ]
      },
      {
        "order": 3,
        "sql": "delete from holdingejb where account_accountid in (select accountid from accountejb a where a.profile_userid like 'ru:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ],
          "RD": [
            "holdingejb.account_accountid"
          ],
          "D": [
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "RD"
        ]
      },
      {
        "order": 4,
        "sql": "delete from accountejb where profile_userid like 'ru:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance"
          ],
          "RD": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 5,
        "sql": "select count(accountid) as \"tradeusercount\" from accountejb a where a.profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 6,
        "sql": "select count(symbol) as \"tradestockcount\" from quoteejb a where a.symbol like 's:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "quoteejb.symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "select sum(logincount) as \"sumlogincount\", sum(logoutcount) as \"sumlogoutcount\" from accountejb a where  a.profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 8,
        "sql": "update accountejb set logoutcount=0,logincount=0 where profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "U": [
            "accountejb.logincount",
            "accountejb.logoutcount"
          ],
          "R": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 9,
        "sql": "select count(holdingid) as \"holdingcount\" from holdingejb h where h.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "holdingejb.account_accountid",
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 10,
        "sql": "select count(orderid) as \"ordercount\" from orderejb o where o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 11,
        "sql": "select count(orderid) \"buyordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.ordertype='buy')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.ordertype"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 12,
        "sql": "select count(orderid) \"sellordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.ordertype='sell')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.ordertype"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 13,
        "sql": "delete from orderejb where orderstatus='cancelled'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ],
          "RD": [
            "orderejb.orderstatus"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 14,
        "sql": "select count(orderid) \"openordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.orderstatus='open')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.orderstatus"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 15,
        "sql": "delete from orderejb where holding_holdingid is null",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ],
          "RD": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeConfigServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeBuildDB",
    "uri": [
      "/config"
    ],
    "entrydisplayname": "TradeBuildDB.<init>(3)",
    "txid": "3",
    "id": "76",
    "transaction": [
      {
        "order": 0,
        "sql": "insert into quoteejb ( symbol, companyname, volume, price, open1, low, high, change1 ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createQuote"
        ],
        "crud": {
          "C": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "C"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeConfigServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeBuildDB",
    "uri": [
      "/config"
    ],
    "entrydisplayname": "TradeBuildDB.<init>(4)",
    "txid": "4",
    "id": "77",
    "transaction": [
      {
        "order": 0,
        "sql": "insert into accountejb ( accountid, creationdate, openbalance, balance, lastlogin, logincount, logoutcount, profile_userid) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register"
        ],
        "crud": {
          "C": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 1,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 2,
        "sql": "insert into keygenejb ( keyname, keyval ) values (  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "C": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 3,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 4,
        "sql": "update keygenejb set keyval = ? where keyname = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname"
          ],
          "U": [
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 5,
        "sql": "insert into accountprofileejb ( userid, passwd, fullname, address, email, creditcard ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register"
        ],
        "crud": {
          "C": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "C"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeConfigServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeBuildDB",
    "uri": [
      "/config"
    ],
    "entrydisplayname": "TradeBuildDB.<init>(5)",
    "txid": "5",
    "id": "78",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteData"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 2,
        "sql": "insert into orderejb ( orderid, ordertype, orderstatus, opendate, quantity, price, orderfee, account_accountid,  holding_holdingid, quote_symbol) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  , ? , ? , ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder"
        ],
        "crud": {
          "C": [
            "orderejb.account_accountid",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 3,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 4,
        "sql": "update accountejb set balance = balance + ? where accountid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.creditAccountBalance"
        ],
        "crud": {
          "R": [
            "accountejb.accountid"
          ],
          "U": [
            "accountejb.balance"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 5,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 6,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.accountid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "insert into holdingejb ( holdingid, purchasedate, purchaseprice, quantity, quote_symbol, account_accountid ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding"
        ],
        "crud": {
          "C": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 8,
        "sql": "select * from holdingejb h where h.holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getHoldingData"
        ],
        "crud": {
          "R": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 9,
        "sql": "update orderejb set holding_holdingid = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderHolding"
        ],
        "crud": {
          "U": [
            "orderejb.holding_holdingid"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 10,
        "sql": "delete from holdingejb where holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ],
          "RD": [
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 11,
        "sql": "update orderejb set holding_holdingid=null where holding_holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "RU": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "RU"
        ]
      },
      {
        "order": 12,
        "sql": "update orderejb set orderstatus = ?, completiondate = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderStatus"
        ],
        "crud": {
          "U": [
            "orderejb.completiondate",
            "orderejb.orderstatus"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TradeConfigServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TradeBuildDB",
    "uri": [
      "/config"
    ],
    "entrydisplayname": "TradeBuildDB.<init>(7)",
    "txid": "7",
    "id": "79",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TradeConfigServlet.service",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TestServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TestServlet",
    "uri": [
      "/TestServlet"
    ],
    "entrydisplayname": "TestServlet.doGet(2)",
    "txid": "2",
    "id": "80",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TestServlet.doGet",
          "com.ibm.websphere.samples.daytrader.web.TestServlet.performTask",
          "com.ibm.websphere.samples.daytrader.TradeAction.createQuote",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createQuote"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TestServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TestServlet",
    "uri": [
      "/TestServlet"
    ],
    "entrydisplayname": "TestServlet.doGet(3)",
    "txid": "3",
    "id": "81",
    "transaction": [
      {
        "order": 0,
        "sql": "insert into quoteejb ( symbol, companyname, volume, price, open1, low, high, change1 ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TestServlet.doGet",
          "com.ibm.websphere.samples.daytrader.web.TestServlet.performTask",
          "com.ibm.websphere.samples.daytrader.TradeAction.createQuote",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createQuote"
        ],
        "crud": {
          "C": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "C"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TestServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TestServlet",
    "uri": [
      "/TestServlet"
    ],
    "entrydisplayname": "TestServlet.doPost(1)",
    "txid": "1",
    "id": "82",
    "transaction": [
      {
        "order": 0,
        "sql": "insert into quoteejb ( symbol, companyname, volume, price, open1, low, high, change1 ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TestServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TestServlet.performTask",
          "com.ibm.websphere.samples.daytrader.TradeAction.createQuote",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createQuote"
        ],
        "crud": {
          "C": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "C"
        ]
      }
    ]
  },
  {
    "type": "servlet",
    "servlet": "TestServlet",
    "entry": "com.ibm.websphere.samples.daytrader.web.TestServlet",
    "uri": [
      "/TestServlet"
    ],
    "entrydisplayname": "TestServlet.doPost(3)",
    "txid": "3",
    "id": "83",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.TestServlet.doPost",
          "com.ibm.websphere.samples.daytrader.web.TestServlet.performTask",
          "com.ibm.websphere.samples.daytrader.TradeAction.createQuote",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createQuote"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/order.faces",
      "/account.faces",
      "/quote.faces",
      "/portfolio.faces",
      "/tradehome.faces",
      "/marketSummary.faces"
    ],
    "entrydisplayname": "TradeAppJSF.logout(1)",
    "txid": "1",
    "id": "84",
    "transaction": [
      {
        "order": 0,
        "sql": "update accountejb set logoutcount=logoutcount+1 where profile_userid=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.logout",
          "com.ibm.websphere.samples.daytrader.TradeAction.logout",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.logout"
        ],
        "crud": {
          "U": [
            "accountejb.logoutcount"
          ],
          "R": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/order.faces",
      "/account.faces",
      "/quote.faces",
      "/portfolio.faces",
      "/tradehome.faces",
      "/marketSummary.faces"
    ],
    "entrydisplayname": "TradeAppJSF.logout(3)",
    "txid": "3",
    "id": "85",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.logout",
          "com.ibm.websphere.samples.daytrader.TradeAction.logout",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.logout"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.logout",
          "com.ibm.websphere.samples.daytrader.TradeAction.logout",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.logout"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.logout",
          "com.ibm.websphere.samples.daytrader.TradeAction.logout",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.logout",
          "com.ibm.websphere.samples.daytrader.entities.AccountDataBean.logout"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF",
    "uri": [
      "/order.faces",
      "/account.faces",
      "/quote.faces",
      "/portfolio.faces",
      "/tradehome.faces",
      "/marketSummary.faces"
    ],
    "entrydisplayname": "QuoteJSF.getQuotesBySymbols(2)",
    "txid": "2",
    "id": "86",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.getQuotesBySymbols",
          "com.ibm.websphere.samples.daytrader.TradeAction.getQuote",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getQuote"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF",
    "uri": [
      "/order.faces",
      "/account.faces",
      "/quote.faces",
      "/portfolio.faces",
      "/tradehome.faces",
      "/marketSummary.faces"
    ],
    "entrydisplayname": "QuoteJSF.getQuotesBySymbols(3)",
    "txid": "3",
    "id": "87",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.getQuotesBySymbols",
          "com.ibm.websphere.samples.daytrader.TradeAction.getQuote",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/account.faces"
    ],
    "entrydisplayname": "TradeAppJSF.updateProfile(1)",
    "txid": "1",
    "id": "88",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.updateProfile",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateAccountProfile",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.updateAccountProfile"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.updateProfile",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateAccountProfile",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.updateAccountProfile"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/account.faces"
    ],
    "entrydisplayname": "TradeAppJSF.updateProfile(2)",
    "txid": "2",
    "id": "89",
    "transaction": [
      {
        "order": 0,
        "sql": "update accountprofileejb set passwd = ?, fullname = ?, address = ?, email = ?, creditcard = ? where userid = (select profile_userid from accountejb a where a.profile_userid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.updateProfile",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateAccountProfile",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateAccountProfile",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateAccountProfile"
        ],
        "crud": {
          "R": [
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ],
          "U": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "U"
        ]
      },
      {
        "order": 1,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.profile_userid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.updateProfile",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateAccountProfile",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateAccountProfile",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF",
    "uri": [
      "/quote.faces"
    ],
    "entrydisplayname": "QuoteJSF.buy(2)",
    "txid": "2",
    "id": "90",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteData"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 2,
        "sql": "insert into orderejb ( orderid, ordertype, orderstatus, opendate, quantity, price, orderfee, account_accountid,  holding_holdingid, quote_symbol) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  , ? , ? , ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder"
        ],
        "crud": {
          "C": [
            "orderejb.account_accountid",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 3,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 4,
        "sql": "insert into keygenejb ( keyname, keyval ) values (  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "C": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 5,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 6,
        "sql": "update keygenejb set keyval = ? where keyname = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname"
          ],
          "U": [
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 8,
        "sql": "update accountejb set balance = balance + ? where accountid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.creditAccountBalance"
        ],
        "crud": {
          "R": [
            "accountejb.accountid"
          ],
          "U": [
            "accountejb.balance"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 9,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 10,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.accountid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 11,
        "sql": "insert into holdingejb ( holdingid, purchasedate, purchaseprice, quantity, quote_symbol, account_accountid ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding"
        ],
        "crud": {
          "C": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 12,
        "sql": "select * from holdingejb h where h.holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getHoldingData"
        ],
        "crud": {
          "R": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 13,
        "sql": "update orderejb set holding_holdingid = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderHolding"
        ],
        "crud": {
          "U": [
            "orderejb.holding_holdingid"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 14,
        "sql": "delete from holdingejb where holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ],
          "RD": [
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 15,
        "sql": "update orderejb set holding_holdingid=null where holding_holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "RU": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "RU"
        ]
      },
      {
        "order": 16,
        "sql": "update orderejb set orderstatus = ?, completiondate = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderStatus"
        ],
        "crud": {
          "U": [
            "orderejb.completiondate",
            "orderejb.orderstatus"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF",
    "uri": [
      "/quote.faces"
    ],
    "entrydisplayname": "QuoteJSF.buy(4)",
    "txid": "4",
    "id": "91",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF",
    "uri": [
      "/quote.faces"
    ],
    "entrydisplayname": "QuoteJSF.buy(6)",
    "txid": "6",
    "id": "92",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy"
        ]
      },
      {
        "order": 4,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createOrder"
        ]
      },
      {
        "order": 5,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createOrder"
        ]
      },
      {
        "order": 6,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy"
        ]
      },
      {
        "order": 7,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 8,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 9,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 10,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 11,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 12,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 13,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 14,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createHolding"
        ]
      },
      {
        "order": 15,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createHolding"
        ]
      },
      {
        "order": 16,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 17,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.entities.OrderDataBean.cancel"
        ]
      },
      {
        "order": 18,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.buy",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF",
    "uri": [
      "/quote.faces"
    ],
    "entrydisplayname": "QuoteJSF.buy(7)",
    "txid": "7",
    "id": "93",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.updateQuotePriceVolume"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF",
    "uri": [
      "/quote.faces"
    ],
    "entrydisplayname": "QuoteJSF.buy(9)",
    "txid": "9",
    "id": "94",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from quoteejb q where q.symbol=? for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteForUpdate"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "update quoteejb set price = ?, change1 = ?, volume = ? where symbol = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume"
        ],
        "crud": {
          "U": [
            "quoteejb.change1",
            "quoteejb.price",
            "quoteejb.volume"
          ],
          "R": [
            "quoteejb.symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 2,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.buy",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF",
    "uri": [
      "/quote.faces"
    ],
    "entrydisplayname": "QuoteJSF.buy(10)",
    "txid": "10",
    "id": "95",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.buy"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF",
    "uri": [
      "/portfolio.faces"
    ],
    "entrydisplayname": "PortfolioJSF.sell(2)",
    "txid": "2",
    "id": "96",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "select * from holdingejb h where h.holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getHoldingData"
        ],
        "crud": {
          "R": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell"
        ]
      },
      {
        "order": 2,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteData"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 3,
        "sql": "insert into orderejb ( orderid, ordertype, orderstatus, opendate, quantity, price, orderfee, account_accountid,  holding_holdingid, quote_symbol) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  , ? , ? , ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder"
        ],
        "crud": {
          "C": [
            "orderejb.account_accountid",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 4,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 5,
        "sql": "insert into keygenejb ( keyname, keyval ) values (  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "C": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 6,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "update keygenejb set keyval = ? where keyname = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname"
          ],
          "U": [
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 8,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 11,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell"
        ]
      },
      {
        "order": 9,
        "sql": "update holdingejb set purchasedate= ? where holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateHoldingStatus"
        ],
        "crud": {
          "R": [
            "holdingejb.holdingid"
          ],
          "U": [
            "holdingejb.purchasedate"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 10,
        "sql": "update accountejb set balance = balance + ? where accountid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.creditAccountBalance"
        ],
        "crud": {
          "R": [
            "accountejb.accountid"
          ],
          "U": [
            "accountejb.balance"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 11,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 12,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.accountid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 13,
        "sql": "insert into holdingejb ( holdingid, purchasedate, purchaseprice, quantity, quote_symbol, account_accountid ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding"
        ],
        "crud": {
          "C": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 14,
        "sql": "update orderejb set holding_holdingid = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderHolding"
        ],
        "crud": {
          "U": [
            "orderejb.holding_holdingid"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 15,
        "sql": "delete from holdingejb where holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ],
          "RD": [
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 16,
        "sql": "update orderejb set holding_holdingid=null where holding_holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "RU": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "RU"
        ]
      },
      {
        "order": 17,
        "sql": "update orderejb set orderstatus = ?, completiondate = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderStatus"
        ],
        "crud": {
          "U": [
            "orderejb.completiondate",
            "orderejb.orderstatus"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF",
    "uri": [
      "/portfolio.faces"
    ],
    "entrydisplayname": "PortfolioJSF.sell(4)",
    "txid": "4",
    "id": "97",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.sell",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF",
    "uri": [
      "/portfolio.faces"
    ],
    "entrydisplayname": "PortfolioJSF.sell(6)",
    "txid": "6",
    "id": "98",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 4,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 5,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 6,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 7,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 8,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createOrder"
        ]
      },
      {
        "order": 9,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createOrder"
        ]
      },
      {
        "order": 10,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 11,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell"
        ]
      },
      {
        "order": 12,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 13,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 14,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 15,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 16,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 17,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 18,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 19,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createHolding"
        ]
      },
      {
        "order": 20,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createHolding"
        ]
      },
      {
        "order": 21,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 22,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.entities.OrderDataBean.cancel"
        ]
      },
      {
        "order": 23,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.sell",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 24,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF",
    "uri": [
      "/portfolio.faces"
    ],
    "entrydisplayname": "PortfolioJSF.sell(7)",
    "txid": "7",
    "id": "99",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.updateQuotePriceVolume"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF",
    "uri": [
      "/portfolio.faces"
    ],
    "entrydisplayname": "PortfolioJSF.sell(9)",
    "txid": "9",
    "id": "100",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from quoteejb q where q.symbol=? for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteForUpdate"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "update quoteejb set price = ?, change1 = ?, volume = ? where symbol = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume"
        ],
        "crud": {
          "U": [
            "quoteejb.change1",
            "quoteejb.price",
            "quoteejb.volume"
          ],
          "R": [
            "quoteejb.symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 2,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.sell",
          "com.ibm.websphere.samples.daytrader.TradeAction.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolume",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateQuotePriceVolumeInt",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuote"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF",
    "uri": [
      "/portfolio.faces"
    ],
    "entrydisplayname": "PortfolioJSF.sell(10)",
    "txid": "10",
    "id": "101",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF.sell"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/welcome.faces"
    ],
    "entrydisplayname": "TradeAppJSF.login(1)",
    "txid": "1",
    "id": "102",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login",
          "com.ibm.websphere.samples.daytrader.entities.AccountDataBean.login"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login",
          "com.ibm.websphere.samples.daytrader.entities.AccountDataBean.login"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/welcome.faces"
    ],
    "entrydisplayname": "TradeAppJSF.login(3)",
    "txid": "3",
    "id": "103",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.profile_userid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.login"
        ],
        "crud": {
          "R": [
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "update accountejb set lastlogin=?, logincount=logincount+1 where profile_userid=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.login"
        ],
        "crud": {
          "U": [
            "accountejb.lastlogin",
            "accountejb.logincount"
          ],
          "R": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 2,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.login"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/welcome.faces"
    ],
    "entrydisplayname": "TradeAppJSF.login(5)",
    "txid": "5",
    "id": "104",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.getAccountProfileData",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountProfileData"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/welcome.faces"
    ],
    "entrydisplayname": "TradeAppJSF.login(7)",
    "txid": "7",
    "id": "105",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.profile_userid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.getAccountProfileData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.resetTrade(1)",
    "txid": "1",
    "id": "106",
    "transaction": [
      {
        "order": 0,
        "sql": "delete from quoteejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 1,
        "sql": "delete from accountejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 2,
        "sql": "delete from accountprofileejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 3,
        "sql": "delete from holdingejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 4,
        "sql": "delete from orderejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.resetTrade(2)",
    "txid": "2",
    "id": "107",
    "transaction": [
      {
        "order": 0,
        "sql": "delete from holdingejb where holdingejb.account_accountid is null",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "RD": [
            "holdingejb.account_accountid"
          ],
          "D": [
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "RD"
        ]
      },
      {
        "order": 1,
        "sql": "delete from accountprofileejb where userid like 'ru:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd"
          ],
          "RD": [
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 2,
        "sql": "delete from orderejb where account_accountid in (select accountid from accountejb a where a.profile_userid like 'ru:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ],
          "RD": [
            "orderejb.account_accountid"
          ],
          "D": [
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "RD"
        ]
      },
      {
        "order": 3,
        "sql": "delete from holdingejb where account_accountid in (select accountid from accountejb a where a.profile_userid like 'ru:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ],
          "RD": [
            "holdingejb.account_accountid"
          ],
          "D": [
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "RD"
        ]
      },
      {
        "order": 4,
        "sql": "delete from accountejb where profile_userid like 'ru:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance"
          ],
          "RD": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 5,
        "sql": "select count(accountid) as \"tradeusercount\" from accountejb a where a.profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 6,
        "sql": "select count(symbol) as \"tradestockcount\" from quoteejb a where a.symbol like 's:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "quoteejb.symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "select sum(logincount) as \"sumlogincount\", sum(logoutcount) as \"sumlogoutcount\" from accountejb a where  a.profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 8,
        "sql": "update accountejb set logoutcount=0,logincount=0 where profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "U": [
            "accountejb.logincount",
            "accountejb.logoutcount"
          ],
          "R": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 9,
        "sql": "select count(holdingid) as \"holdingcount\" from holdingejb h where h.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "holdingejb.account_accountid",
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 10,
        "sql": "select count(orderid) as \"ordercount\" from orderejb o where o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 11,
        "sql": "select count(orderid) \"buyordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.ordertype='buy')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.ordertype"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 12,
        "sql": "select count(orderid) \"sellordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.ordertype='sell')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.ordertype"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 13,
        "sql": "delete from orderejb where orderstatus='cancelled'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ],
          "RD": [
            "orderejb.orderstatus"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 14,
        "sql": "select count(orderid) \"openordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.orderstatus='open')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.orderstatus"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 15,
        "sql": "delete from orderejb where holding_holdingid is null",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.resetTrade",
          "com.ibm.websphere.samples.daytrader.TradeAction.resetTrade",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.resetTrade",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ],
          "RD": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.buildDatabaseTables(1)",
    "txid": "1",
    "id": "108",
    "transaction": [
      {
        "order": 0,
        "sql": "delete from quoteejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 1,
        "sql": "delete from accountejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 2,
        "sql": "delete from accountprofileejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 3,
        "sql": "delete from holdingejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 4,
        "sql": "delete from orderejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.buildDatabaseTables(2)",
    "txid": "2",
    "id": "109",
    "transaction": [
      {
        "order": 0,
        "sql": "delete from holdingejb where holdingejb.account_accountid is null",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "RD": [
            "holdingejb.account_accountid"
          ],
          "D": [
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "RD"
        ]
      },
      {
        "order": 1,
        "sql": "delete from accountprofileejb where userid like 'ru:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd"
          ],
          "RD": [
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 2,
        "sql": "delete from orderejb where account_accountid in (select accountid from accountejb a where a.profile_userid like 'ru:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ],
          "RD": [
            "orderejb.account_accountid"
          ],
          "D": [
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "RD"
        ]
      },
      {
        "order": 3,
        "sql": "delete from holdingejb where account_accountid in (select accountid from accountejb a where a.profile_userid like 'ru:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ],
          "RD": [
            "holdingejb.account_accountid"
          ],
          "D": [
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "RD"
        ]
      },
      {
        "order": 4,
        "sql": "delete from accountejb where profile_userid like 'ru:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance"
          ],
          "RD": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 5,
        "sql": "select count(accountid) as \"tradeusercount\" from accountejb a where a.profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 6,
        "sql": "select count(symbol) as \"tradestockcount\" from quoteejb a where a.symbol like 's:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "quoteejb.symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "select sum(logincount) as \"sumlogincount\", sum(logoutcount) as \"sumlogoutcount\" from accountejb a where  a.profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 8,
        "sql": "update accountejb set logoutcount=0,logincount=0 where profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "U": [
            "accountejb.logincount",
            "accountejb.logoutcount"
          ],
          "R": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 9,
        "sql": "select count(holdingid) as \"holdingcount\" from holdingejb h where h.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "holdingejb.account_accountid",
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 10,
        "sql": "select count(orderid) as \"ordercount\" from orderejb o where o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 11,
        "sql": "select count(orderid) \"buyordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.ordertype='buy')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.ordertype"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 12,
        "sql": "select count(orderid) \"sellordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.ordertype='sell')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.ordertype"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 13,
        "sql": "delete from orderejb where orderstatus='cancelled'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ],
          "RD": [
            "orderejb.orderstatus"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 14,
        "sql": "select count(orderid) \"openordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.orderstatus='open')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.orderstatus"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 15,
        "sql": "delete from orderejb where holding_holdingid is null",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ],
          "RD": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.buildDatabaseTables(3)",
    "txid": "3",
    "id": "110",
    "transaction": [
      {
        "order": 0,
        "sql": "insert into quoteejb ( symbol, companyname, volume, price, open1, low, high, change1 ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createQuote"
        ],
        "crud": {
          "C": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "C"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.buildDatabaseTables(4)",
    "txid": "4",
    "id": "111",
    "transaction": [
      {
        "order": 0,
        "sql": "insert into accountejb ( accountid, creationdate, openbalance, balance, lastlogin, logincount, logoutcount, profile_userid) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register"
        ],
        "crud": {
          "C": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 1,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 2,
        "sql": "insert into keygenejb ( keyname, keyval ) values (  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "C": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 3,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 4,
        "sql": "update keygenejb set keyval = ? where keyname = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname"
          ],
          "U": [
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 5,
        "sql": "insert into accountprofileejb ( userid, passwd, fullname, address, email, creditcard ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register"
        ],
        "crud": {
          "C": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "C"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.buildDatabaseTables(5)",
    "txid": "5",
    "id": "112",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteData"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 2,
        "sql": "insert into orderejb ( orderid, ordertype, orderstatus, opendate, quantity, price, orderfee, account_accountid,  holding_holdingid, quote_symbol) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  , ? , ? , ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder"
        ],
        "crud": {
          "C": [
            "orderejb.account_accountid",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 3,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 4,
        "sql": "update accountejb set balance = balance + ? where accountid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.creditAccountBalance"
        ],
        "crud": {
          "R": [
            "accountejb.accountid"
          ],
          "U": [
            "accountejb.balance"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 5,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 6,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.accountid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "insert into holdingejb ( holdingid, purchasedate, purchaseprice, quantity, quote_symbol, account_accountid ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding"
        ],
        "crud": {
          "C": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 8,
        "sql": "select * from holdingejb h where h.holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getHoldingData"
        ],
        "crud": {
          "R": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 9,
        "sql": "update orderejb set holding_holdingid = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderHolding"
        ],
        "crud": {
          "U": [
            "orderejb.holding_holdingid"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 10,
        "sql": "delete from holdingejb where holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ],
          "RD": [
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 11,
        "sql": "update orderejb set holding_holdingid=null where holding_holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "RU": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "RU"
        ]
      },
      {
        "order": 12,
        "sql": "update orderejb set orderstatus = ?, completiondate = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderStatus"
        ],
        "crud": {
          "U": [
            "orderejb.completiondate",
            "orderejb.orderstatus"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.buildDatabaseTables(7)",
    "txid": "7",
    "id": "113",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.buildDatabaseTables",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.populateDatabase(1)",
    "txid": "1",
    "id": "114",
    "transaction": [
      {
        "order": 0,
        "sql": "delete from quoteejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 1,
        "sql": "delete from accountejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 2,
        "sql": "delete from accountprofileejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 3,
        "sql": "delete from holdingejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 4,
        "sql": "delete from orderejb",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.populateDatabase(2)",
    "txid": "2",
    "id": "115",
    "transaction": [
      {
        "order": 0,
        "sql": "delete from holdingejb where holdingejb.account_accountid is null",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "RD": [
            "holdingejb.account_accountid"
          ],
          "D": [
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "RD"
        ]
      },
      {
        "order": 1,
        "sql": "delete from accountprofileejb where userid like 'ru:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd"
          ],
          "RD": [
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 2,
        "sql": "delete from orderejb where account_accountid in (select accountid from accountejb a where a.profile_userid like 'ru:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ],
          "RD": [
            "orderejb.account_accountid"
          ],
          "D": [
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "RD"
        ]
      },
      {
        "order": 3,
        "sql": "delete from holdingejb where account_accountid in (select accountid from accountejb a where a.profile_userid like 'ru:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ],
          "RD": [
            "holdingejb.account_accountid"
          ],
          "D": [
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "RD"
        ]
      },
      {
        "order": 4,
        "sql": "delete from accountejb where profile_userid like 'ru:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance"
          ],
          "RD": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 5,
        "sql": "select count(accountid) as \"tradeusercount\" from accountejb a where a.profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 6,
        "sql": "select count(symbol) as \"tradestockcount\" from quoteejb a where a.symbol like 's:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "quoteejb.symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "select sum(logincount) as \"sumlogincount\", sum(logoutcount) as \"sumlogoutcount\" from accountejb a where  a.profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 8,
        "sql": "update accountejb set logoutcount=0,logincount=0 where profile_userid like 'uid:%'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "U": [
            "accountejb.logincount",
            "accountejb.logoutcount"
          ],
          "R": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 9,
        "sql": "select count(holdingid) as \"holdingcount\" from holdingejb h where h.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "holdingejb.account_accountid",
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "holdingejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 10,
        "sql": "select count(orderid) as \"ordercount\" from orderejb o where o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 11,
        "sql": "select count(orderid) \"buyordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.ordertype='buy')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.ordertype"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 12,
        "sql": "select count(orderid) \"sellordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.ordertype='sell')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.ordertype"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 13,
        "sql": "delete from orderejb where orderstatus='cancelled'",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ],
          "RD": [
            "orderejb.orderstatus"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 14,
        "sql": "select count(orderid) \"openordercount\"from orderejb o where (o.account_accountid in (select accountid from accountejb a where a.profile_userid like 'uid:%')) and  (o.orderstatus='open')",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "orderejb.account_accountid",
            "orderejb.orderid",
            "orderejb.orderstatus"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "orderejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 15,
        "sql": "delete from orderejb where holding_holdingid is null",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.resetTrade"
        ],
        "crud": {
          "D": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ],
          "RD": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "D"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.populateDatabase(3)",
    "txid": "3",
    "id": "116",
    "transaction": [
      {
        "order": 0,
        "sql": "insert into quoteejb ( symbol, companyname, volume, price, open1, low, high, change1 ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createQuote"
        ],
        "crud": {
          "C": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "C"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.populateDatabase(4)",
    "txid": "4",
    "id": "117",
    "transaction": [
      {
        "order": 0,
        "sql": "insert into accountejb ( accountid, creationdate, openbalance, balance, lastlogin, logincount, logoutcount, profile_userid) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register"
        ],
        "crud": {
          "C": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 1,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 2,
        "sql": "insert into keygenejb ( keyname, keyval ) values (  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "C": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 3,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 4,
        "sql": "update keygenejb set keyval = ? where keyname = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname"
          ],
          "U": [
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 5,
        "sql": "insert into accountprofileejb ( userid, passwd, fullname, address, email, creditcard ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register"
        ],
        "crud": {
          "C": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "C"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.populateDatabase(5)",
    "txid": "5",
    "id": "118",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "select * from quoteejb q where q.symbol=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getQuoteData"
        ],
        "crud": {
          "R": [
            "quoteejb.change1",
            "quoteejb.companyname",
            "quoteejb.high",
            "quoteejb.low",
            "quoteejb.open1",
            "quoteejb.price",
            "quoteejb.symbol",
            "quoteejb.volume"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 2,
        "sql": "insert into orderejb ( orderid, ordertype, orderstatus, opendate, quantity, price, orderfee, account_accountid,  holding_holdingid, quote_symbol) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  , ? , ? , ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder"
        ],
        "crud": {
          "C": [
            "orderejb.account_accountid",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 3,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 4,
        "sql": "update accountejb set balance = balance + ? where accountid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.creditAccountBalance"
        ],
        "crud": {
          "R": [
            "accountejb.accountid"
          ],
          "U": [
            "accountejb.balance"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 5,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 6,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.accountid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "insert into holdingejb ( holdingid, purchasedate, purchaseprice, quantity, quote_symbol, account_accountid ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding"
        ],
        "crud": {
          "C": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 8,
        "sql": "select * from holdingejb h where h.holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getHoldingData"
        ],
        "crud": {
          "R": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 9,
        "sql": "update orderejb set holding_holdingid = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderHolding"
        ],
        "crud": {
          "U": [
            "orderejb.holding_holdingid"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 10,
        "sql": "delete from holdingejb where holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ],
          "RD": [
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 11,
        "sql": "update orderejb set holding_holdingid=null where holding_holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "RU": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "RU"
        ]
      },
      {
        "order": 12,
        "sql": "update orderejb set orderstatus = ?, completiondate = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderStatus"
        ],
        "crud": {
          "U": [
            "orderejb.completiondate",
            "orderejb.orderstatus"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF",
    "uri": [
      "/configure.faces"
    ],
    "entrydisplayname": "TradeConfigJSF.populateDatabase(7)",
    "txid": "7",
    "id": "119",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeConfigJSF.populateDatabase",
          "com.ibm.websphere.samples.daytrader.web.TradeBuildDB.<init>",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.buy",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getOrderData"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/register.faces"
    ],
    "entrydisplayname": "TradeAppJSF.register(2)",
    "txid": "2",
    "id": "120",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.register"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.register"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.register"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.register"
        ]
      },
      {
        "order": 4,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.register"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/register.faces"
    ],
    "entrydisplayname": "TradeAppJSF.register(3)",
    "txid": "3",
    "id": "121",
    "transaction": [
      {
        "order": 0,
        "sql": "insert into accountejb ( accountid, creationdate, openbalance, balance, lastlogin, logincount, logoutcount, profile_userid) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register"
        ],
        "crud": {
          "C": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 1,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 2,
        "sql": "insert into keygenejb ( keyname, keyval ) values (  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "C": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 3,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 4,
        "sql": "update keygenejb set keyval = ? where keyname = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname"
          ],
          "U": [
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 5,
        "sql": "insert into accountprofileejb ( userid, passwd, fullname, address, email, creditcard ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ?  )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.TradeAction.register",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.register"
        ],
        "crud": {
          "C": [
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "C"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/register.faces"
    ],
    "entrydisplayname": "TradeAppJSF.register(5)",
    "txid": "5",
    "id": "122",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login",
          "com.ibm.websphere.samples.daytrader.entities.AccountDataBean.login"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.login",
          "com.ibm.websphere.samples.daytrader.entities.AccountDataBean.login"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/register.faces"
    ],
    "entrydisplayname": "TradeAppJSF.register(7)",
    "txid": "7",
    "id": "123",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.profile_userid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.login"
        ],
        "crud": {
          "R": [
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "update accountejb set lastlogin=?, logincount=logincount+1 where profile_userid=?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.login"
        ],
        "crud": {
          "U": [
            "accountejb.lastlogin",
            "accountejb.logincount"
          ],
          "R": [
            "accountejb.profile_userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 2,
        "sql": "select * from accountejb a where a.profile_userid = ( select userid from accountprofileejb ap where ap.userid = ?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.login",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.login"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.balance",
            "accountejb.creationdate",
            "accountejb.lastlogin",
            "accountejb.logincount",
            "accountejb.logoutcount",
            "accountejb.openbalance",
            "accountejb.profile_userid",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/register.faces"
    ],
    "entrydisplayname": "TradeAppJSF.register(9)",
    "txid": "9",
    "id": "124",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.getAccountProfileData",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.getAccountProfileData"
        ]
      }
    ]
  },
  {
    "type": "jsf",
    "entry": "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF",
    "uri": [
      "/register.faces"
    ],
    "entrydisplayname": "TradeAppJSF.register(11)",
    "txid": "11",
    "id": "125",
    "transaction": [
      {
        "order": 0,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.profile_userid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.register",
          "com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF.login",
          "com.ibm.websphere.samples.daytrader.TradeAction.getAccountProfileData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      }
    ]
  },
  {
    "type": "mdb",
    "uri": "TradeBrokerQueue",
    "entry": "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB",
    "entrydisplayname": "DTBroker3MDB.onMessage(0)",
    "txid": "0",
    "id": "126",
    "transaction": [
      {
        "order": 0,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 1,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 2,
        "resource_type": "dbtable",
        "resource": [
          "accountejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 3,
        "resource_type": "dbtable",
        "resource": [
          "quoteejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 4,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 5,
        "resource_type": "dbtable",
        "resource": [
          "accountprofileejb"
        ],
        "operation": [
          "R"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 6,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.createHolding"
        ]
      },
      {
        "order": 7,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 8,
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder",
          "com.ibm.websphere.samples.daytrader.entities.OrderDataBean.cancel"
        ]
      },
      {
        "order": 9,
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ],
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.ejb3.TradeSLSBBean.completeOrder"
        ]
      },
      {
        "order": 0,
        "sql": "select * from orderejb o where o.orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder"
        ],
        "crud": {
          "R": [
            "orderejb.account_accountid",
            "orderejb.completiondate",
            "orderejb.holding_holdingid",
            "orderejb.opendate",
            "orderejb.orderfee",
            "orderejb.orderid",
            "orderejb.orderstatus",
            "orderejb.ordertype",
            "orderejb.price",
            "orderejb.quantity",
            "orderejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 1,
        "sql": "select * from accountprofileejb ap where ap.userid = (select profile_userid from accountejb a where a.accountid=?)",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getAccountProfileData"
        ],
        "crud": {
          "R": [
            "accountejb.accountid",
            "accountejb.profile_userid",
            "accountprofileejb.address",
            "accountprofileejb.creditcard",
            "accountprofileejb.email",
            "accountprofileejb.fullname",
            "accountprofileejb.passwd",
            "accountprofileejb.userid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "accountejb",
          "accountprofileejb"
        ],
        "operation": [
          "R",
          "R"
        ]
      },
      {
        "order": 2,
        "sql": "insert into holdingejb ( holdingid, purchasedate, purchaseprice, quantity, quote_symbol, account_accountid ) values (  ?  ,  ?  ,  ?  ,  ?  ,  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding"
        ],
        "crud": {
          "C": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 3,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 4,
        "sql": "insert into keygenejb ( keyname, keyval ) values (  ?  ,  ? )",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "C": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "C"
        ]
      },
      {
        "order": 5,
        "sql": "select * from keygenejb kg where kg.keyname = ?  for update",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname",
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 6,
        "sql": "update keygenejb set keyval = ? where keyname = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.getNextID",
          "com.ibm.websphere.samples.daytrader.direct.KeySequenceDirect.allocNewBlock"
        ],
        "crud": {
          "R": [
            "keygenejb.keyname"
          ],
          "U": [
            "keygenejb.keyval"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "keygenejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 7,
        "sql": "select * from holdingejb h where h.holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.createHolding",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.getHoldingData"
        ],
        "crud": {
          "R": [
            "holdingejb.account_accountid",
            "holdingejb.holdingid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "R"
        ]
      },
      {
        "order": 8,
        "sql": "update orderejb set holding_holdingid = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderHolding"
        ],
        "crud": {
          "U": [
            "orderejb.holding_holdingid"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      },
      {
        "order": 9,
        "sql": "delete from holdingejb where holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "D": [
            "holdingejb.account_accountid",
            "holdingejb.purchasedate",
            "holdingejb.purchaseprice",
            "holdingejb.quantity",
            "holdingejb.quote_symbol"
          ],
          "RD": [
            "holdingejb.holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "holdingejb"
        ],
        "operation": [
          "D"
        ]
      },
      {
        "order": 10,
        "sql": "update orderejb set holding_holdingid=null where holding_holdingid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.removeHolding"
        ],
        "crud": {
          "RU": [
            "orderejb.holding_holdingid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "RU"
        ]
      },
      {
        "order": 11,
        "sql": "update orderejb set orderstatus = ?, completiondate = ? where orderid = ?",
        "callgraph": [
          "com.ibm.websphere.samples.daytrader.ejb3.DTBroker3MDB.onMessage",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.completeOrder",
          "com.ibm.websphere.samples.daytrader.direct.TradeDirect.updateOrderStatus"
        ],
        "crud": {
          "U": [
            "orderejb.completiondate",
            "orderejb.orderstatus"
          ],
          "R": [
            "orderejb.orderid"
          ]
        },
        "resource_type": "dbtable",
        "resource": [
          "orderejb"
        ],
        "operation": [
          "U"
        ]
      }
    ]
  }
]